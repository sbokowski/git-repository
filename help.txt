{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\froman\fcharset0 Times-Roman;\f4\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww15160\viewh10180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Today June 20 2025 
\f1\b0 \
\'93What am I solving today that matters?\'94
\fs24 \
\
  \
\pard\pardeftab720\sa298\partightenfactor0

\f2\b\fs50 \cf2 \expnd0\expndtw0\kerning0
Schedule learning time \
\pard\pardeftab720\partightenfactor0

\f3\b0\fs38 \cf2 Learning a little each day adds up. Research shows that students who make learning a habit are more likely to reach their goals. Set time aside to learn and get reminders using your learning scheduler.
\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs38 \cf0    Git help / commands / recommendation \
\
           Crash course / git/ GitHub  \
Note ; using command Lin can be faster \
  \
   Bogdan tutorial - 3 stars \
\
   How long take to do course?\
    10am start \
# 
\f0\b \

\f1\b0      \
    \
 #     ls -a.   -list hidden folder\
   
\f0\b   Make new directory 
\f1\b0 \
 #.    mkdir filename\
 # \
      
\f0\b   Crea a new Git repository  
\f1\b0 \
#  i
\f0\b nitialize git  -
\f1\b0 \
#\
 #    git init\
\
#     
\f0\b   remove directory.      
\f1\b0 \
 #      rm -r  fillename\
#     \
\
#    \
            
\f0\b   Make a file \
#.        \
 #       
\f1\b0   echo first > 1.text
\f0\b \

\f1\b0 \
#.  
\f0\b make new  branch in git  
\f1\b0  \
 #\
#   example\
# git branch -m  git-repositoryy1\
#\
 #.    git branch -m\
#\

\f0\b  #.  Default name of branch in git  master  \

\f1\b0 #   \
#   
\f0\b Gti branch - list type current\
\
# list status of git \
     will. Show branch and information \
\
#     
\f1\b0  git status 
\f0\b         \
 
\f1\b0 \
#     git branch\
# \

\f0\b #        Git , list objects in file /folers in git repository\
       Object folder \
\
# 
\f1\b0     ls  .git/objects  \
   \
#  Note  \
  When you git init you will be in directory while git is\
Running  \
            
\f0\b  Clear screen , \
\
  #      
\f1\b0  clear or cmd +. K
\f0\b \

\f1\b0 \
#       clear  - command to clear make room. \
\
#     
\f0\b   git object types\
 
\f1\b0 \
       Different git objext types \
     2 main objects types   \
        1. Files \
         2. Folders \
\
       
\f0\b Blob
\f1\b0     /  represent fles , files files files\
\
       
\f0\b Tree
\f1\b0    /  represent folder or directories folders or directories\
\
       
\f0\b Commit
\f1\b0    /.  pointers to specific trees  pointer to specific trees\
           -you can create different commits \
\
        
\f0\b Annotated tag
\f1\b0   /
\fs54   
\f3\fs40 \cf2 \expnd0\expndtw0\kerning0
Annotated tags are 
\f4\b stored as full objects \
      in the Git database
\f3\b0 . To reiterate, They store extra meta data \
        such as: the tagger name, email, and date. Similar to commits\
        and commit messages Annotated tags have a tagging message.
\f1\fs38 \cf0 \kerning1\expnd0\expndtw0 \
\
   #
\f0\b           Hashes of the Git objects \

\f1\b0   \
              Hash is create using specific hash function namely sha\
     hash function and hash functions create \
\
                 Variable length  input \
                            \
                Any variable length input\
\
                  Hash function \
\
              C210aasdadsfpoumg8gn bld037576tghgbniyu\
\
                 Fixed length hash  ( see above )\
\
               Hexadecimal 16 characters (12345 , ABCCD )\
               \
               Decimal 10 characters (0.1234565)\
    \
                 Binary 2 characters (0, 1)\
\
                       \
                                        
\f0\b     
\fs42 SHA 1\

\f1\b0\fs38                 \
             	              	        160 bits\
\
                                  40 hexadecimal  characters\
\
    			  c325fd085 c325fd085 c325fd085 c325fd085\
\
    Now , lets\'92 proceed and lets create first file in our Git  repository\
      It our working direectory folder \
                                    \
\
        
\f0\b\fs42   In Git there are 3 areas  in Git 
\f1\b0\fs38 \
\
         1        Working directory \
\
         2   	Staging area / index\
\
        3 	      Git repository \
\
\
            And there is a sub folder called objects you could use tab\
       In order to autocomplete this path \
\
 \

\f0\b\fs42          Most common operations \
\
         Stage\
 #      git add  \
\
      Commit \
 #      git commit \
\
     Jump into certain version of the project\
#.     git checkout\

\f1\b0\fs38       \
 \
  
\f0\b\fs42   Lets getting started  , clear screen  or cmmd k\
\
   #                 git add filename.txt\
\
      Use git add to add file to stain are \
\
    #              git status \
\
      Now enter git status , now there are changing are\
    Some changes to be committed and that means \
\
  #               git commit -m  \'93message about commit\'94 \
   \
   Now we could use git commit command in order to \
   Commit changes \
\
      Note commit has a shasum hash assign to it\
    Has an id to \
                          \
               8a31fb commit \
\
              Author name / email / \
              commit desciption\
               Parent \
\
       Every commit has author name and email , and works \
     Git works locally. On your computer 
\f1\b0\fs38         \
\

\f0\b      User name and email config  command \
\

\f1\b0    #     git config \'97list \
\
 #  already set up username and email \
           \
#         Git commit. Command\
\
     Now lets go ahead and commit the changes by using cmmd\
  Git  commit and this will commit. The changes \
\
  # git status        - will show status file  - may say new file.txt\
 #    -m  means message  must add a message in quotes double\
# quotes.  \
#       git commit -m \'93another awesome commit\'94 \
\
# Git will say of changes made. In commit  1 file changes and \
# name of file and changes \
\
 # Left off commit changes \
\
    #             git log  \
         Show history of  commits \
\
#             - Will add all files to staging area\
 #       git add . \
\
  #        40 digit length letters, number hash\
\
 #       commit c0d0e19643a1269da14b3e874159f199bcb260b5\
\
#  left off at file tracking statues in Git }